name: 🔍 Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

env:
  NODE_VERSION: '18'

jobs:
  # 🧹 Lint and Format Check
  lint:
    name: 🧹 Lint & Format
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Check TypeScript types
        run: npx astro check
        
      - name: 🏗️ Build check
        run: npm run build

  # 🔒 Security Audit
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔒 Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true
        
      - name: 🔍 Check for known vulnerabilities
        run: npm audit --audit-level=critical

  # 📊 Dependency Analysis
  dependency-review:
    name: 📊 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical

  # 🌐 Accessibility Check
  accessibility:
    name: ♿ Accessibility Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build for testing
        run: npm run build
        
      - name: 🚀 Start preview server
        run: npm run preview &
        env:
          CI: true
          
      - name: ⏳ Wait for server
        run: npx wait-on http://localhost:4321 --timeout 30000
        
      - name: ♿ Run accessibility tests
        run: |
          npx @axe-core/cli http://localhost:4321 \
            --exit \
            --save accessibility-report.json \
            --reporter json
        continue-on-error: true
        
      - name: 📊 Upload accessibility report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report
          path: accessibility-report.json
          retention-days: 7

  # ⚡ Performance Check
  performance:
    name: ⚡ Performance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build for testing
        run: npm run build
        
      - name: 🚀 Start preview server
        run: npm run preview &
        env:
          CI: true
          
      - name: ⏳ Wait for server
        run: npx wait-on http://localhost:4321 --timeout 30000
        
      - name: ⚡ Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        continue-on-error: true

  # 📈 Bundle Analysis
  bundle-analysis:
    name: 📈 Bundle Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build and analyze
        run: |
          npm run build
          echo "📊 Build completed successfully"
          du -sh dist/*
        
      - name: 📊 Bundle size report
        run: |
          echo "## 📈 Bundle Size Report" >> $GITHUB_STEP_SUMMARY
          echo "| File | Size |" >> $GITHUB_STEP_SUMMARY  
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          find dist -name "*.js" -o -name "*.css" | head -10 | while read file; do
            size=$(du -h "$file" | cut -f1)
            echo "| \`$(basename "$file")\` | $size |" >> $GITHUB_STEP_SUMMARY
          done